diff --git a/dist/browser.js b/dist/browser.js
index 764ecf32575111b18e6e6cc03a64759bb6856b74..19b6150ecd6c94099d615d4e5c1f4b12e9c78479 100644
--- a/dist/browser.js
+++ b/dist/browser.js
@@ -125,7 +125,8 @@ function RemixBrowser(_props) {
     value: {
       manifest: window.__remixManifest,
       routeModules: window.__remixRouteModules,
-      future: window.__remixContext.future
+      future: window.__remixContext.future,
+      criticalCss: window.__remixContext.criticalCss
     }
   }, /*#__PURE__*/React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
     location: location
diff --git a/dist/components.js b/dist/components.js
index 134d3f384e12632d703732226af5843f041fa602..3157d61856d0bfd96c5870178f62b99afd3fe73d 100644
--- a/dist/components.js
+++ b/dist/components.js
@@ -193,7 +193,8 @@ function composeEventHandlers(theirHandler, ourHandler) {
 function Links() {
   let {
     manifest,
-    routeModules
+    routeModules,
+    criticalCss
   } = useRemixContext();
   let {
     errors,
@@ -201,14 +202,16 @@ function Links() {
   } = useDataRouterStateContext();
   let matches = errors ? routerMatches.slice(0, routerMatches.findIndex(m => errors[m.route.id]) + 1) : routerMatches;
   let keyedLinks = React__namespace.useMemo(() => links.getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
-  return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, keyedLinks.map(({
+  return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, [
+    criticalCss ? /*#__PURE__*/React__namespace.createElement('style', { key: 'style' }, criticalCss) : null,
+    keyedLinks.map(({
     key,
     link
   }) => links.isPageLinkDescriptor(link) ? /*#__PURE__*/React__namespace.createElement(PrefetchPageLinks, _rollupPluginBabelHelpers["extends"]({
     key: key
   }, link)) : /*#__PURE__*/React__namespace.createElement("link", _rollupPluginBabelHelpers["extends"]({
     key: key
-  }, link))));
+  }, link)))]);
 }
 
 /**
diff --git a/dist/esm/browser.js b/dist/esm/browser.js
index 5acc26e7affafb0756f91dc4e78ee3d33f44abd1..68970c5728aaeeedf9b370e0552d0f7856bb0abb 100644
--- a/dist/esm/browser.js
+++ b/dist/esm/browser.js
@@ -161,7 +161,8 @@ function RemixBrowser(_props) {
     value: {
       manifest: window.__remixManifest,
       routeModules: window.__remixRouteModules,
-      future: window.__remixContext.future
+      future: window.__remixContext.future,
+      criticalCss: window.__remixContext.criticalCss
     }
   }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {
     location: location
diff --git a/dist/esm/components.js b/dist/esm/components.js
index 89d80308b3a54934e4fd3d0039f60562bf49dcc9..aff3c46b6566cef6d5f56c7d4973ef15f26b793e 100644
--- a/dist/esm/components.js
+++ b/dist/esm/components.js
@@ -169,7 +169,8 @@ function composeEventHandlers(theirHandler, ourHandler) {
 function Links() {
   let {
     manifest,
-    routeModules
+    routeModules,
+    criticalCss
   } = useRemixContext();
   let {
     errors,
@@ -177,14 +178,16 @@ function Links() {
   } = useDataRouterStateContext();
   let matches = errors ? routerMatches.slice(0, routerMatches.findIndex(m => errors[m.route.id]) + 1) : routerMatches;
   let keyedLinks = React.useMemo(() => getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
-  return /*#__PURE__*/React.createElement(React.Fragment, null, keyedLinks.map(({
+  return /*#__PURE__*/React.createElement(React.Fragment, null, [
+    criticalCss ? /*#__PURE__*/React.createElement('style', { key: 'style' }, criticalCss) : null,
+    keyedLinks.map(({
     key,
     link
   }) => isPageLinkDescriptor(link) ? /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({
     key: key
   }, link)) : /*#__PURE__*/React.createElement("link", _extends({
     key: key
-  }, link))));
+  }, link)))]);
 }
 
 /**
diff --git a/dist/esm/links.js b/dist/esm/links.js
index cfcf6ada9e5754d086049a6705647e789bfb24bd..c2adc82ad2122611fc75d4271522abfa64ad9c85 100644
--- a/dist/esm/links.js
+++ b/dist/esm/links.js
@@ -26,15 +26,21 @@ function getKeyedLinksForMatches(matches, routeModules, manifest) {
   let descriptors = matches.map(match => {
     var _module$links;
     let module = routeModules[match.route.id];
-    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];
-  }).flat(1);
+    let route = manifest.routes[match.route.id];
+    return [
+      route.css ? route.css.map(href => ({ rel: "stylesheet", href })) : [],
+      ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [],
+    ];
+  }).flat(2);
   let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
   return dedupeLinkDescriptors(descriptors, preloads);
 }
-async function prefetchStyleLinks(routeModule) {
-  if (!routeModule.links || !isPreloadSupported()) return;
-  let descriptors = routeModule.links();
-  if (!descriptors) return;
+async function prefetchStyleLinks(route, routeModule) {
+  let descriptors = [
+    route.css ? route.css.map(href => ({ rel: "stylesheet", href })) : [],
+    routeModule.links ? routeModule.links() : []
+  ].flat(1);
+  if (descriptors.length === 0) return;
   let styleLinks = [];
   for (let descriptor of descriptors) {
     if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") {
diff --git a/dist/esm/routes.js b/dist/esm/routes.js
index fc88668b9226bfaf278729bab738540d8cd378dd..fd220d3323828f7685efe0bf8c02c86534002ba5 100644
--- a/dist/esm/routes.js
+++ b/dist/esm/routes.js
@@ -121,7 +121,7 @@ function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalid
 }
 async function loadRouteModuleWithBlockingLinks(route, routeModules) {
   let routeModule = await loadRouteModule(route, routeModules);
-  await prefetchStyleLinks(routeModule);
+  await prefetchStyleLinks(route, routeModule);
   return {
     ...routeModule,
     default: undefined,
diff --git a/dist/links.js b/dist/links.js
index 4bb74f3b54f9fe77b59bd897c35423ade8445936..81791990f520dbcee62c75139728c340f04099d9 100644
--- a/dist/links.js
+++ b/dist/links.js
@@ -30,15 +30,21 @@ function getKeyedLinksForMatches(matches, routeModules, manifest) {
   let descriptors = matches.map(match => {
     var _module$links;
     let module = routeModules[match.route.id];
-    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];
-  }).flat(1);
+    let route = manifest.routes[match.route.id];
+    return [
+      route.css ? route.css.map(href => ({ rel: "stylesheet", href })) : [],
+      ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [],
+    ];
+  }).flat(2);
   let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
   return dedupeLinkDescriptors(descriptors, preloads);
 }
-async function prefetchStyleLinks(routeModule) {
-  if (!routeModule.links || !isPreloadSupported()) return;
-  let descriptors = routeModule.links();
-  if (!descriptors) return;
+async function prefetchStyleLinks(route, routeModule) {
+  let descriptors = [
+    route.css ? route.css.map(href => ({ rel: "stylesheet", href })) : [],
+    routeModule.links ? routeModule.links() : []
+  ].flat(1);
+  if (descriptors.length === 0) return;
   let styleLinks = [];
   for (let descriptor of descriptors) {
     if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") {
diff --git a/dist/routes.js b/dist/routes.js
index 1e9d735aae4f7429db20bc177658d2dd701b36f8..8ecbccc3cd8e2eb523fc80099ee10b2d9b7f2519 100644
--- a/dist/routes.js
+++ b/dist/routes.js
@@ -142,7 +142,7 @@ function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalid
 }
 async function loadRouteModuleWithBlockingLinks(route, routeModules$1) {
   let routeModule = await routeModules.loadRouteModule(route, routeModules$1);
-  await links.prefetchStyleLinks(routeModule);
+  await links.prefetchStyleLinks(route, routeModule);
   return {
     ...routeModule,
     default: undefined,
diff --git a/dist/server.js b/dist/server.js
index 18997c6a5e50b7e197698dca48961fb3c6e3b54e..88378440903c93545da15a4685ae8ba1981115f4 100644
--- a/dist/server.js
+++ b/dist/server.js
@@ -54,6 +54,7 @@ function RemixServer({
   let {
     manifest,
     routeModules,
+    criticalCss,
     serverHandoffString
   } = context;
   let routes$1 = routes.createServerRoutes(manifest.routes, routeModules, context.future);
@@ -62,6 +63,7 @@ function RemixServer({
     value: {
       manifest,
       routeModules,
+      criticalCss,
       serverHandoffString,
       future: context.future,
       serializeError: context.serializeError,